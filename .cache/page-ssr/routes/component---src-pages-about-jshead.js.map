{"version":3,"file":"component---src-pages-about-jshead.js","mappings":";;;;;;;;;;;;;;;;;AAA6C;AAE7C,IAAIG,QAAQ,GAAG,CACX;EAACC,IAAI,EAAE,YAAY;EAAEC,KAAK,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAClD;EAACF,IAAI,EAAE,gBAAgB;EAAEC,KAAK,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAQ,CAAC,EACtD;EAACF,IAAI,EAAE,mBAAmB;EAAEC,KAAK,EAAE,MAAM;EAAEC,IAAI,EAAE;AAAQ,CAAC,CAC7D;AAED,SAASC,SAAS,GAAG;EACjB,IAAIC,OAAO,GAAGP,6CAAM,EAAE;EACtB,IAAIQ,QAAQ,GAAGR,6CAAM,EAAE;EACvB,IAAI;IAAA,GAACS,YAAY;IAAA,GAAEC;EAAe,IAAIT,+CAAQ,CAAC,EAAE,CAAC;EAElD,IAAIU,KAAK,GAAG,CAAC;EAEb,KAAK,IAAIC,CAAC,IAAIV,QAAQ,EAAE;IACpBS,KAAK,IAAIT,QAAQ,CAACU,CAAC,CAAC,CAACR,KAAK;EAC9B;EAEA,SAASS,UAAU,GAAG;IAClB,IAAIC,OAAO,GAAGP,OAAO,CAACQ,OAAO,CAACC,KAAK;IACnC,IAAIC,QAAQ,GAAGT,QAAQ,CAACO,OAAO,CAACC,KAAK;IACrC;IACAd,QAAQ,CAACgB,IAAI,CAAC;MACVf,IAAI,EAAEW,OAAO;MAAEV,KAAK,EAAEa;IAC1B,CAAC,CAAC;IACFE,OAAO,CAACC,GAAG,CAAClB,QAAQ,CAAC;IACrBQ,eAAe,CAAC,CAAC,GAAGD,YAAY,CAAC,CAAC;EACtC;EAEA,SAASY,aAAa,CAACC,KAAK,EAAE;IAC1Bb,YAAY,CAACc,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAC7BZ,eAAe,CAAC,CAAC,GAAGD,YAAY,CAAC,CAAC;EACtC;EAEA,oBACI,sFACI,uFAAsB,eAEtB,qFACI,+FACU;IAAO,IAAI,EAAG,MAAM;IAAC,EAAE,EAAG,MAAM;IAAC,GAAG,EAAIF;EAAQ,EAAE,OAAE,GAAG,0BACtD;IAAO,IAAI,EAAG,MAAM;IAAC,EAAE,EAAG,OAAO;IAAC,GAAG,EAAIC;EAAS,EAAE,OAAE,GAAG,eAChE;IAAQ,OAAO,EAAIK;EAAW,WAAe,CAC3C,eACN;IAAO,MAAM,EAAG;EAAG,gBACf,uFACI,oFACI,8EAAa,8FAAc,+FAAe,CACzC,CACD,eACR,0EACKX,QAAQ,CAACsB,GAAG,CAAC,CAACZ,CAAC,EAAEU,KAAK,kBACnB,oFACI,oFAAI;IAAQ,OAAO,EAAE,MAAID,aAAa,CAACC,KAAK;EAAE,YAAgB,CAAK,eACnE,uEAAKV,CAAC,CAACT,IAAI,CAAM,eACjB,uEAAKS,CAAC,CAACR,KAAK,CAAM,CAEzB,CAAC,CACE,eACR,uFACI,oFACA,+EAAc,eACd,uEAAKO,KAAK,CAAM,CACX,CACD,CACJ,CACN,CACH;AAEf;AAEA,iEAAeL,SAAS","sources":["webpack://ornwara-gatsby/./src/pages/about.js"],"sourcesContent":["import React, {useRef, useState} from \"react\"\n\nvar products = [\n    {name: \"Samsung TV\", price: 20000, type: \"gadget\"},\n    {name: \"Sony WH1000XM5\", price: 12345, type: \"gadget\"},\n    {name: \"Sony VPL-XW5000ES\", price: 190693, type: \"gadget\"},\n]\n\nfunction AboutPage() {\n    let nameRef = useRef()\n    let priceRef = useRef()\n    let [productState, setProductState] = useState([])\n\n    let total = 0;\n\n    for (let p in products) {\n        total += products[p].price\n    }\n\n    function addProduct() {\n        let newName = nameRef.current.value\n        let newPrice = priceRef.current.value\n        //alert(\"Add Product \" + newName + \" \" + newPrice)\n        products.push({\n            name: newName, price: newPrice\n        })\n        console.log(products)\n        setProductState([...productState])\n    }\n\n    function deleteProduct(index) {\n        productState.splice(index, 1)\n        setProductState([...productState])\n    }\n\n    return (\n        <main>\n            <h1>Order Summary</h1>\n\n            <div>\n                <div>\n                    Name: <input type = \"text\" id = \"name\" ref = {nameRef}/> {\" \"}\n                    Price: <input type = \"text\" id = \"price\" ref = {priceRef}/> {\" \"}\n                    <button onClick = {addProduct}>+ ADD</button>\n                </div>\n                <table border = \"1\">\n                    <thead>\n                        <tr>\n                            <th>Name</th><th>Price</th><th>Delete</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {products.map((p, index) => (\n                            <tr>\n                                <td><button onClick={()=>deleteProduct(index)}>Delete</button></td>\n                                <td>{p.name}</td>\n                                <td>{p.price}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                        <td>Total</td>\n                        <td>{total}</td>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </main>\n    )\n}\n\nexport default AboutPage"],"names":["React","useRef","useState","products","name","price","type","AboutPage","nameRef","priceRef","productState","setProductState","total","p","addProduct","newName","current","value","newPrice","push","console","log","deleteProduct","index","splice","map"],"sourceRoot":""}