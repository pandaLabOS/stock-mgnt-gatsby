{"version":3,"file":"component---src-pages-index-js.js","mappings":"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","sources":["webpack://ornwara-gatsby/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://ornwara-gatsby/./src/components/header.js","webpack://ornwara-gatsby/./src/components/layout.js","webpack://ornwara-gatsby/./src/components/seo.js","webpack://ornwara-gatsby/../src/image-utils.ts","webpack://ornwara-gatsby/../src/components/hooks.ts","webpack://ornwara-gatsby/../src/components/picture.tsx","webpack://ornwara-gatsby/../src/components/placeholder.tsx","webpack://ornwara-gatsby/../src/components/main-image.tsx","webpack://ornwara-gatsby/../src/components/layout-wrapper.tsx","webpack://ornwara-gatsby/../src/components/gatsby-image.server.tsx","webpack://ornwara-gatsby/../src/components/static-image.server.tsx","webpack://ornwara-gatsby/./src/components/index.module.css","webpack://ornwara-gatsby/./src/pages/index.js"],"sourcesContent":["'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      margin: `0 auto`,\n      padding: `var(--space-4) var(--size-gutter)`,\n      display: `flex`,\n      alignItems: `center`,\n      justifyContent: `space-between`,\n    }}\n  >\n    <Link\n      to=\"/\"\n      style={{\n        fontSize: `var(--font-sm)`,\n        textDecoration: `none`,\n      }}\n    >\n      {siteTitle}\n    </Link>\n    <img\n      alt=\"Gatsby logo\"\n      height={20}\n      style={{ margin: 0 }}\n      src=\"data:image/svg+xml,%3Csvg fill='none' viewBox='0 0 107 28' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3CclipPath id='a'%3E%3Cpath d='m0 0h106.1v28h-106.1z'/%3E%3C/clipPath%3E%3Cg clip-path='url(%23a)'%3E%3Cg fill='%23000'%3E%3Cpath clip-rule='evenodd' d='m89 11.7c-.8 0-2.2.2-3.2 1.6v-8.10005h-2.8v16.80005h2.7v-1.3c1.1 1.5 2.6 1.5999 3.2 1.5999 3 0 5-2.2999 5-5.2999s-2-5.3-4.9-5.3zm-.7 2.5c1.7 0 2.8 1.2 2.8 2.8s-1.2 2.8-2.8 2.8c-1.7 0-2.8-1.2-2.8-2.8s1.1-2.8 2.8-2.8z' fill-rule='evenodd'/%3E%3Cpath d='m71.2 21.9999v-7.6h1.9v-2.4h-1.9v-3.40005h-2.8v3.40005h-1.1v2.4h1.1v7.6z'/%3E%3Cpath clip-rule='evenodd' d='m65.6999 12h-2.9v1.3c-.8999-1.5-2.4-1.6-3.2-1.6-2.9 0-4.8999 2.4-4.8999 5.3s1.9999 5.2999 5.0999 5.2999c.8 0 2.1001-.0999 3.1001-1.5999v1.3h2.7999zm-5.1999 7.8c-1.7001 0-2.8-1.2-2.8-2.8s1.2-2.8 2.8-2.8c1.7 0 2.7999 1.2 2.7999 2.8s-1.1999 2.8-2.7999 2.8z' fill-rule='evenodd'/%3E%3Cpath d='m79.7001 14.4c-.7-.6-1.3-.7-1.6-.7-.7 0-1.1.3-1.1.8 0 .3.1.6.9.9l.7.2c.1261.0472.2621.0945.4037.1437.7571.2632 1.6751.5823 2.0963 1.2563.3.4.5 1 .5 1.7 0 .9-.3 1.8-1.1 2.5s-1.8 1.0999-3 1.0999c-2.1 0-3.2-.9999-3.9-1.6999l1.5-1.7c.6.6 1.4 1.2 2.2 1.2s1.4-.4 1.4-1.1c0-.6-.5-.9-.9-1l-.6-.2c-.0687-.0295-.1384-.0589-.2087-.0887l-.0011-.0004c-.6458-.2729-1.3496-.5704-1.8902-1.1109-.5-.5-.8-1.1-.8-1.9 0-1 .5-1.8 1-2.3.8-.6 1.8-.7 2.6-.7.7 0 1.9.1 3.2 1.1z'/%3E%3Cpath d='m98.5 20.5-4.8-8.5h3.3l3.1 5.7 2.8-5.7h3.2l-8 15.3h-3.2z'/%3E%3Cpath d='m47 13.7h7c0 .0634.01.1267.0206.1932.0227.1435.0477.3018-.0206.5068 0 4.5-3.4 8.1-8 8.1s-8-3.6-8-8.1c0-4.49995 3.6-8.09995 8-8.09995 2.6 0 5 1.2 6.5 3.3l-2.3 1.49995c-1-1.29995-2.6-2.09995-4.2-2.09995-2.9 0-4.9 2.49995-4.9 5.39995s2.1 5.3 5 5.3c2.6 0 4-1.3 4.6-3.2h-3.7z'/%3E%3C/g%3E%3Cpath d='m18 14h7c0 5.2-3.7 9.6-8.5 10.8l-13.19995-13.2c1.1-4.9 5.5-8.6 10.69995-8.6 3.7 0 6.9 1.8 8.9 4.5l-1.5 1.3c-1.7-2.3-4.4-3.8-7.4-3.8-3.9 0-7.29995 2.5-8.49995 6l11.49995 11.5c2.9-1 5.1-3.5 5.8-6.5h-4.8z' fill='%23fff'/%3E%3Cpath d='m6.2 21.7001c-2.1-2.1-3.2-4.8-3.2-7.6l10.8 10.8c-2.7 0-5.5-1.1-7.6-3.2z' fill='%23fff'/%3E%3Cpath d='m14 0c-7.7 0-14 6.3-14 14s6.3 14 14 14 14-6.3 14-14-6.3-14-14-14zm-7.8 21.8c-2.1-2.1-3.2-4.9-3.2-7.6l10.9 10.8c-2.8-.1-5.6-1.1-7.7-3.2zm10.2 2.9-13.1-13.1c1.1-4.9 5.5-8.6 10.7-8.6 3.7 0 6.9 1.8 8.9 4.5l-1.5 1.3c-1.7-2.3-4.4-3.8-7.4-3.8-3.9 0-7.2 2.5-8.5 6l11.5 11.5c2.9-1 5.1-3.5 5.8-6.5h-4.8v-2h7c0 5.2-3.7 9.6-8.6 10.7z' fill='%237026b9'/%3E%3C/g%3E%3C/svg%3E\"\n    />\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          © {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","// Exports\nexport var list = \"index-module--list--fb407\";\nexport var listItem = \"index-module--listItem--06e6d\";\nexport var listItemLink = \"index-module--listItemLink--02c9e\";\nexport var listItemDescription = \"index-module--listItemDescription--f3875\";\nexport var textCenter = \"index-module--textCenter--4ece3\";\nexport var intro = \"index-module--intro--0b876\";\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport * as styles from \"../components/index.module.css\"\n\nconst links = [\n  {\n    text: \"Tutorial\",\n    url: \"https://www.gatsbyjs.com/docs/tutorial\",\n    description:\n      \"A great place to get started if you're new to web development. Designed to guide you through setting up your first Gatsby site.\",\n  },\n  {\n    text: \"Examples\",\n    url: \"https://github.com/gatsbyjs/gatsby/tree/master/examples\",\n    description:\n      \"A collection of websites ranging from very basic to complex/complete that illustrate how to accomplish specific tasks within your Gatsby sites.\",\n  },\n  {\n    text: \"Plugin Library\",\n    url: \"https://www.gatsbyjs.com/plugins\",\n    description:\n      \"Learn how to add functionality and customize your Gatsby site or app with thousands of plugins built by our amazing developer community.\",\n  },\n  {\n    text: \"Build and Host\",\n    url: \"https://www.gatsbyjs.com/cloud\",\n    description:\n      \"Now you’re ready to show the world! Give your Gatsby site superpowers: Build and host on Gatsby Cloud. Get started for free!\",\n  },\n]\n\nconst samplePageLinks = [\n  {\n    text: \"Page 2\",\n    url: \"page-2\",\n    badge: false,\n    description:\n      \"A simple example of linking to another page within a Gatsby site\",\n  },\n  { text: \"TypeScript\", url: \"using-typescript\" },\n  { text: \"Server Side Rendering\", url: \"using-ssr\" },\n  { text: \"Deferred Static Generation\", url: \"using-dsg\" },\n]\n\nconst moreLinks = [\n  { text: \"Join us on Discord\", url: \"https://gatsby.dev/discord\" },\n  {\n    text: \"Documentation\",\n    url: \"https://gatsbyjs.com/docs/\",\n  },\n  {\n    text: \"Starters\",\n    url: \"https://gatsbyjs.com/starters/\",\n  },\n  {\n    text: \"Showcase\",\n    url: \"https://gatsbyjs.com/showcase/\",\n  },\n  {\n    text: \"Contributing\",\n    url: \"https://www.gatsbyjs.com/contributing/\",\n  },\n  { text: \"Issues\", url: \"https://github.com/gatsbyjs/gatsby/issues\" },\n]\n\nconst utmParameters = `?utm_source=starter&utm_medium=start-page&utm_campaign=default-starter`\n\nconst IndexPage = () => (\n  <Layout>\n    <div className={styles.textCenter}>\n      <StaticImage\n        src=\"../images/example.png\"\n        loading=\"eager\"\n        width={64}\n        quality={95}\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        alt=\"\"\n        style={{ marginBottom: `var(--space-3)` }}\n      />\n      <h1>\n        Welcome <b>Ornwara</b>\n      </h1>\n      <p className={styles.intro}>\n        <b>Example pages:</b>{\" \"}\n        {samplePageLinks.map((link, i) => (\n          <React.Fragment key={link.url}>\n            <Link to={link.url}>{link.text}</Link>\n            {i !== samplePageLinks.length - 1 && <> · </>}\n          </React.Fragment>\n        ))}\n        <br />\n        Edit <code>src/pages/index.js</code> to update this page.\n      </p>\n    </div>\n    <ul className={styles.list}>\n      {links.map(link => (\n        <li key={link.url} className={styles.listItem}>\n          <a\n            className={styles.listItemLink}\n            href={`${link.url}${utmParameters}`}\n          >\n            {link.text} ↗\n          </a>\n          <p className={styles.listItemDescription}>{link.description}</p>\n        </li>\n      ))}\n    </ul>\n    {moreLinks.map((link, i) => (\n      <React.Fragment key={link.url}>\n        <a href={`${link.url}${utmParameters}`}>{link.text}</a>\n        {i !== moreLinks.length - 1 && <> · </>}\n      </React.Fragment>\n    ))}\n  </Layout>\n)\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"Home\" />\n\nexport default IndexPage\n"],"names":["preserveCamelCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","length","character","test","toUpperCase","slice","toLowerCase","camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","postProcess","x","charAt","map","trim","filter","join","hasUpperCase","replace","_","p1","m","module","exports","default","React","Link","Header","siteTitle","margin","padding","display","alignItems","justifyContent","fontSize","textDecoration","useStaticQuery","Layout","children","data","site","siteMetadata","title","maxWidth","marginTop","Date","getFullYear","Seo","description","metaDescription","defaultTitle","author","message","warn","a","b","images","src","image","width","filename","lastIndexOf","dot","ext","args","layout","height","sourceMetadata","breakpoints","aspectRatio","formats","Math","round","generateImageSource","setDefaultDimensions","format","fit","_generateImageSource","pluginName","reporter","backgroundColor","placeholderURL","formatFromFilename","size","has","add","imgDimensions","DEFAULT_BREAKPOINTS","entries","erroneousUserDimensions","outputPixelDensities","dedupeAndSortDensities","DEFAULT_PIXEL_DENSITIES","getDimensionsAndAspectRatio","calculated","fixedDimension","sizes","densities","density","presentationWidth","originalWidth","presentationHeight","unscaledWidth","calculateImageSizes","sources","getSizes","imageSizes","forEach","imageSrc","Boolean","find","unscaled","result","fallback","srcSet","getSrcSet","push","type","imageProps","placeholder","values","from","sort","sortNumeric","min","includes","dimensions","Number","MAX_SAFE_INTEGER","widthOption","heightOption","imageAspectRatio","max","GATSBY___IMAGE","node","_node$images","_node$images$fallback","isGatsbyImageData","gatsbyImageData","isGatsbyImageDataParent","gatsbyImage","isGatsbyImageParent","childImageSharp","_node$childImageSharp","getImage","_getImage","_getImage$images","_getImage$images$fall","_getImage2","_getImage2$images","_getImage2$images$fal","baseUrl","urlBuilder","sourceWidth","sourceHeight","props","EVERY_BREAKPOINT","defaultImage","artDirected","media","process","env","NODE_ENV","console","output","source","loading","alt","shouldLoad","decoding","undefined","Image","key","fallbackImage","propTypes","PropTypes","isRequired","bool","Picture","displayName","exact","arrayOf","oneOfType","Placeholder","_Picture$propTypes","propName","componentName","MainImage","dangerouslySetInnerHTML","__html","style","paddingTop","role","position","Fragment","Sizer","NativeScriptLoading","str","as","className","preactClass","imgClassName","imgStyle","objectFit","objectPosition","placeholderBackgroundColor","gatsbyImageIsInstalled","wrapperStyle","overflow","verticalAlign","getWrapperProps","wStyle","wClass","wrapperProps","cleanedImages","removeNewLines","createElement","LayoutWrapper","isLoaded","top","left","bottom","right","opacity","transition","getPlaceholderProps","isLoading","transform","willChange","getMainProps","GatsbyImage","imageData","__imageData","__error","_getStaticImage","GatsbyImageServer","number","checkDimensionProps","validLayouts","StaticImage","styles","links","text","url","samplePageLinks","badge","moreLinks","utmParameters","IndexPage","textCenter","marginBottom","intro","link","list","listItem","listItemLink","listItemDescription","Head"],"sourceRoot":""}