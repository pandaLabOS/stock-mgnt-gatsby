{"version":3,"file":"component---src-pages-pos-index-js-47f9eefc72df8319826f.js","mappings":"oPAIe,SAASA,EAAWC,GAC/B,MAAM,MAACC,EAAK,MAAEC,EAAK,YAAEC,EAAW,MAAEC,EAAK,YAAEC,GAAeL,EAWxD,OACI,gBAACM,EAAA,EAAI,CAACC,MAAO,CAACC,MAAO,QAASC,OAAQ,QAClC,gBAACH,EAAA,MAAQ,CAACI,QAAQ,MAAMC,IAAKV,EAAOM,MAAS,CAACK,UAAW,SAAUC,aAAc,UACjF,gBAACP,EAAA,OAAS,KACN,gBAACA,EAAA,QAAU,KAAEJ,EAAK,MAAKE,GACvB,gBAACE,EAAA,OAAS,KAAEH,GACZ,gBAACW,EAAA,EAAM,CAACP,MAfF,CACdQ,gBAAiB,UACjBC,MAAO,QACPC,OAAQ,oBACRC,SAAU,MACVC,QAAS,OACTC,WAAY,UASwBC,QAAWhB,GAAY,gBAMnE,C,YCpBe,SAASiB,IAOpB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,GAAgB,SAAU,SAQtD,IAAKC,EAAcC,GAAmBC,EAAAA,SAAe,KAChDC,EAASC,GAAcF,EAAAA,SAAe,QACtCG,EAAMC,IAAWP,EAAAA,EAAAA,GAAgB,OAAQ,KACzCQ,EAAWC,GAAgBN,EAAAA,SAAe,OAG/C,SAASO,EAAUZ,GACfa,QAAQC,MAAMd,GACdQ,EAAKO,KAAKf,GACVa,QAAQG,IAAIR,GACZC,GAAQ,OAAID,GAChB,CAyBA,OAvBAH,EAAAA,WAAgB,KACZ,IAAIY,EAAQ,GACZC,MAAM,qCAAqCZ,GACtCa,MAAKC,GAAOA,EAAIC,SAChBF,MAAMG,IACH,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAChCD,EAAQC,GAAG1C,MAAQ,GACnBgC,QAAQG,IAAIM,EAAQC,IACpBN,EAAMF,KACF,gBAACvC,EAAU,CACPiD,IAAOF,EACP7C,MAAS4C,EAAQC,GAAG7C,MACpBC,MAAS2C,EAAQC,GAAG5C,MAEpBE,MA5CT,GA6CSC,YAAe,KAAO8B,EAAUU,EAAQC,GAAG,KAIvDnB,EAAgBa,EAAM,GACxB,GACP,CAACX,IAGA,gBAACoB,EAAA,EAAS,KACN,oCACA,gBAACC,EAAA,EAAW,KACR,gBAACpC,EAAA,EAAM,CAACJ,QAAQ,YAAYW,QAAS,IAAMS,EAAW,QAAO,OAC7D,gBAAChB,EAAA,EAAM,CAACJ,QAAQ,YAAYW,QAAS,IAAMS,EAAW,SAAQ,SAElE,gBAACqB,EAAA,EAAG,KACA,gBAACC,EAAA,EAAG,CAACC,GAAM,IAAI,gBAACF,EAAA,EAAG,KAAEzB,IACrB,gBAAC0B,EAAA,EAAG,CAACC,GAAM,GACP,gBAACF,EAAA,EAAG,KACA,mCAEHpB,EAAKuB,KAAIC,GAEF,gBAACJ,EAAA,EAAG,KACA,gBAACC,EAAA,EAAG,KAAEG,EAAKrD,MAAK,iBAI5B,gBAACiD,EAAA,EAAG,KACA,gBAACC,EAAA,EAAG,KAAC,mCAAWrB,EAAKyB,QAAOD,GA1EjC,IA0EqD,MAExD,gBAACJ,EAAA,EAAG,QAOpB,C","sources":["webpack://ornwara-gatsby/./src/components/CoffeeCard.js","webpack://ornwara-gatsby/./src/pages/pos/index.js"],"sourcesContent":["import * as React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Button} from 'react-bootstrap';\n\nexport default function CoffeeCard(props) {\n    const {image, title, description, price, handleClick} = props;\n\n    const addToCart = {\n        backgroundColor: \"#FE6601\",\n        color: \"white\",\n        border: \"1px #FFFFFF solid\",\n        fontSize: \"1em\",\n        display: \"flex\", \n        alignItems: \"center\"\n    }\n    \n    return (\n        <Card style={{width: '15rem', margin: '5px'}}>\n            <Card.Img variant=\"top\" src={image} style = {{marginTop: \"0.5rem\", borderRadius: \"10px\"}}/>\n            <Card.Body>\n                <Card.Title>{title} - {price}</Card.Title>\n                <Card.Text>{description}</Card.Text>\n                <Button style = {addToCart} onClick = {handleClick}>\n                    Add to Cart\n                </Button>\n            </Card.Body>\n        </Card>\n    )\n}","import * as React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Button, ButtonGroup } from 'react-bootstrap';\nimport CoffeeCard from '../../components/CoffeeCard.js'\nimport { useLocalStorage } from 'react-use'\n\nconst dummyPrice = 65\n\nexport default function PosPage() {\n\n    // window.localStorage['coffee'] = 'Latte'\n    // ^^ The code above is an example of how to store data in the local storage but this is not the React style\n\n    // vv Do this instead vv\n\n    const [coffee, setCoffee] = useLocalStorage('coffee', 'Latte')\n\n    /* \n    - The local storage is where we can store persistent data\n    - The local storage is a key-value pair\n    - Anything that begins with the word 'use' is a React Hook\n    */\n\n    let [coffeeTitles, setCoffeeTitles] = React.useState([])\n    let [subMenu, setSubMenu] = React.useState('hot')\n    let [cart, setCart] = useLocalStorage('cart', [])\n    let [localData, setLocalData] = React.useState('XXX')\n    let total = 0\n\n    function addToCart(coffee) {\n        console.debug(coffee)\n        cart.push(coffee)\n        console.log(cart)\n        setCart([...cart])\n    }\n\n    React.useEffect(() => {\n        let items = []\n        fetch(`https://api.sampleapis.com/coffee/${subMenu}`) //await is easier to understand. The 'then' is not ideal\n            .then(res => res.json()) //On a new line for readability | res is a complex object, but the app only needs the json data, so the first 'then' converts it to a json format\n            .then((coffees) => { //coffees is the json data (assumed and recognized as the json data)\n                for (let i = 0; i < coffees.length; i++) { //Prepare the CoffeeCards\n                    coffees[i].price = 59\n                    console.log(coffees[i])\n                    items.push (\n                        <CoffeeCard\n                            key = {i}\n                            image = {coffees[i].image}\n                            title = {coffees[i].title }\n                            // description = {coffees[i].description}\n                            price = {dummyPrice}\n                            handleClick = {() => {addToCart(coffees[i])}}\n                        />\n                    )\n                }\n                setCoffeeTitles(items)\n            })\n    }, [subMenu])\n\n    return (\n        <Container>\n            <h1>Coffee</h1>\n            <ButtonGroup>\n                <Button variant=\"secondary\" onClick={() => setSubMenu('hot')}>Hot</Button>\n                <Button variant=\"secondary\" onClick={() => setSubMenu('iced')}>Iced</Button>\n            </ButtonGroup>\n            <Row>\n                <Col sm = {10}><Row>{coffeeTitles}</Row></Col>\n                <Col sm = {2}>\n                    <Row>\n                        <h2>Cart</h2>\n                    </Row>\n                    {cart.map(item => {\n                        return (\n                            <Row>\n                                <Col>{item.title} - 59 Baht</Col>\n                            </Row>\n                        )\n                    })}\n                    <Row>\n                        <Col><b>Total: {cart.reduce(item => dummyPrice, 0)}</b></Col>\n                    </Row>\n                <Row>\n \n                </Row>\n                </Col>\n            </Row>\n        </Container>\n    )\n}"],"names":["CoffeeCard","props","image","title","description","price","handleClick","Card","style","width","margin","variant","src","marginTop","borderRadius","Button","backgroundColor","color","border","fontSize","display","alignItems","onClick","PosPage","coffee","setCoffee","useLocalStorage","coffeeTitles","setCoffeeTitles","React","subMenu","setSubMenu","cart","setCart","localData","setLocalData","addToCart","console","debug","push","log","items","fetch","then","res","json","coffees","i","length","key","Container","ButtonGroup","Row","Col","sm","map","item","reduce"],"sourceRoot":""}